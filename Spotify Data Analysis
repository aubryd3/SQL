# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#1 Found the average popularity, danceability, and energy of each song and grouped them by artist
SELECT
artist_name, track_name, avg(popularity), avg(danceability), avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

#2 Found the top 10 most popular songs by artist
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

#3 Searched by name to see how many songs they had on the list
SELECT COUNT(id), artist_name
FROM BIT_DB.Spotifydata
Where artist_name like '%doja cat%';

#4 What is the longest song on the playlist and who's it by
SELECT artist_name, track_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata
LIMIT 1;

#5 List showing the artists that appear on the playlist more than once, organized by how many times they appear
SELECT COUNT(id), artist_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING COUNT(id) > 1
ORDER BY COUNT(id) desc;

